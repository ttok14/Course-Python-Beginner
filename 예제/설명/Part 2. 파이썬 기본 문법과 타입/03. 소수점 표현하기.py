# ====================================
# Part 2. 소수점 표현하기
# ====================================

# float 타입은 소수점이 있는 숫자를 나타내는 데이터 타입입니다.
# '부동소수점(floating-point number)'이라고도 부릅니다.
# 프로그램이 현실 세계의 다양한 값(평균 점수, 키, 몸무게 등)을 정확하게 다루기 위해 사용됩니다.

print("--- 1. float 변수 생성 및 타입 확인 ---")

# 변수에 소수점 값을 할당하면 자동으로 float 타입이 됩니다.
pi = 3.14
height = 182.5

# print() 함수로 변수에 저장된 값을 출력합니다.
print("원주율(pi)의 값:", pi)

# type() 함수로 변수의 데이터 타입을 확인합니다. 결과로 <class 'float'>가 출력됩니다.
print("pi 변수의 타입:", type(pi))
print("-" * 20)

print("키(height)의 값:", height)
print("height 변수의 타입:", type(height))
print("-" * 20)


# 정수(int)와 소수(float)를 함께 연산하면 결과는 항상 float이 됩니다.
# 이는 더 정밀한 표현이 가능한 쪽으로 타입을 맞춰 데이터 손실을 방지하기 위함입니다.
print("--- 2. 정수와 float의 연산 확인 ---")

score = 100    # int 타입
bonus = 0.5    # float 타입

total_score = score + bonus

print("기본 점수(정수):", score)
print("보너스 점수(소수):", bonus)
print("최종 점수:", total_score)
print("최종 점수의 타입:", type(total_score))
print("-" * 20)


# 나눗셈 연산자(/)는 연산의 결과가 나누어 떨어지는 경우에도 항상 float 타입을 반환합니다.
# 이는 정보 손실 가능성을 원천적으로 차단하기 위한 파이썬의 설계입니다.
print("--- 3. 나눗셈 연산자(/)의 특징 ---")

# 나누어 떨어지는 경우: 결과가 정수 4가 아닌 소수 4.0이 됩니다.
result1 = 12 / 3
print("12 / 3 의 결과:", result1)
print("12 / 3 의 결과 타입:", type(result1))
print()

# 나누어 떨어지지 않는 경우
result2 = 10 / 3
print("10 / 3 의 결과:", result2)
print("10 / 3 의 결과 타입:", type(result2))
print("-" * 20)


# float 타입을 활용하여 실생활의 계산을 수행할 수 있습니다.
# 예를 들어, 학생의 평균 점수를 계산하는 경우 소수점 표현이 필수적입니다.
print("--- 4. 실습 예제: 평균 점수 계산하기 ---")

korean = 95
english = 88
math = 92

# 세 과목의 총점을 계산합니다.
total = korean + english + math

# 총점을 과목 수인 3으로 나누어 평균을 계산합니다.
# 이 때 나눗셈 연산자(/)를 사용하므로 결과는 float이 됩니다.
average = total / 3

print("세 과목의 총점:", total)
print("세 과목의 평균 점수는:", average)
print("-" * 20)

'''
- 정리하며
    1. 소수점이 있는 숫자는 파이썬에서 'float' 타입으로 관리됩니다.
    2. float은 평균, 측정값 등 정수로 표현하기 어려운 현실 세계의 데이터를 다룰 때 필수적입니다.
    3. 정수(int)와 소수(float)를 함께 연산하면, 데이터 손실을 막기 위해 결과는 항상 float 타입이 됩니다.
    4. 나눗셈 연산자(/)는 나누어 떨어지는 경우에도 정보 손실 가능성을 차단하기 위해 항상 float 타입의 결과를 반환합니다.
'''