# ====================================
# Part 2. 파이썬 기본 문법과 타입 - 파이썬 코딩 기초
# ====================================

# 1. 변수(Variable)와 할당(Assignment)
# 변수는 데이터에 붙이는 '이름표'입니다.
# 등호(=)를 사용하여 변수에 값을 '할당'합니다.
print("--- 1. 변수와 할당 ---")

score = 100  # score라는 변수에 100이라는 정수 데이터를 할당합니다.
level = 5    # level이라는 변수에 5라는 정수 데이터를 할당합니다.

# print() 함수를 사용해 변수가 가리키는 값을 출력할 수 있습니다.
print(score)
print(level)

# 변수에 할당된 값은 언제든지 변경할 수 있습니다. (그래서 '변수'입니다.)
print("\n--- 변수 값 변경 ---")
score = 80   # score 변수에 새로운 값 80을 할당합니다.
print(score) # 이제 score는 100이 아닌 80을 출력합니다.

score = 95   # 가장 마지막에 할당된 값이 변수의 현재 값이 됩니다.
print(score) # 최종적으로 score는 95를 출력합니다.


# 2. 변수 이름 규칙 (Identifier Rules)
# 변수의 이름은 몇 가지 규칙을 따라야 합니다.
print("\n--- 2. 변수 이름 규칙 ---")

# (O) 올바른 예시
# 스네이크 케이스(snake_case)는 파이썬에서 권장하는 변수명 표기법입니다.
player_level = 10
user_name = "python_user"
player1_score = 100
_private_data = "비밀 정보" # 언더스코어(_)로 시작할 수 있습니다.

print(player_level)
print(user_name)

# (X) 잘못된 예시 (SyntaxError 발생)
# 아래 코드들은 문법 오류를 발생시키므로, 주석(#) 처리하여 실행을 막습니다.

# 1. 숫자로 시작할 수 없습니다.
# 1st_place = "Gold"  # SyntaxError: invalid decimal literal

# 2. 하이픈(-) 등 언더스코어(_) 외의 특수문자를 사용할 수 없습니다.
# my-name = "Python"  # SyntaxError: cannot assign to operator

# 3. 파이썬이 이미 사용하는 예약어(if, for, while, class 등)는 사용할 수 없습니다.
# if = 10             # SyntaxError: invalid syntax


# 3. 주석 (Comment)
# '#' 기호 뒤의 내용은 코드로 실행되지 않습니다.
# 코드에 대한 설명을 추가하거나, 특정 코드를 잠시 비활성화할 때 유용합니다.
print("\n--- 3. 주석 ---")

# 아래 변수는 플레이어의 이름을 저장하는 역할을 합니다. (이 줄은 실행되지 않습니다)
player_name = "Alice"
print(player_name)

# print("이 코드는 주석 처리되어 실행되지 않습니다.")


# 4. 들여쓰기 (Indentation)
# 파이썬에서 들여쓰기는 코드의 논리적 구조를 나타내는 중요한 '문법'입니다.
print("\n--- 4. 들여쓰기 ---")

# (X) 잘못된 예시: 불필요한 들여쓰기는 오류를 발생시킵니다.
# print("아무 이유 없이 들여쓰기를 하면 에러가 발생합니다.") # IndentationError: unexpected indent

# (O) 올바른 예시: if, for, def 등 특정 구문 다음에는 반드시 들여쓰기가 필요합니다.
# 아직 배우지 않았지만, if 조건문을 예시로 살펴봅니다.
if 10 > 5:
    # if 블록에 속한 코드는 같은 수준으로 들여쓰기 해야 합니다.
    print("if 구문 안쪽: 10은 5보다 큽니다.")
    print("if 구문 안쪽: 이 줄도 같은 수준으로 들여쓰기 되었습니다.")

# (X) 잘못된 예시: 같은 블록 내에서 들여쓰기 수준이 다르면 오류가 발생합니다.
if 10 > 5:
    print("첫 번째 줄은 들여쓰기가 4칸입니다.")
    #   print("두 번째 줄은 들여쓰기가 6칸이라 에러가 발생합니다.") # IndentationError: unexpected indent

print("들여쓰기 예시가 끝났습니다.")


'''
    - 정리하며
        1. 변수는 데이터에 이름표를 붙여 값을 '할당'하고, 필요할 때 재사용하는 기능입니다.
        2. 변수 이름은 대소문자를 구분하고, 숫자로 시작할 수 없으며, 예약어 사용이 불가합니다. (특수문자는 '_'만 허용)
        3. 파이썬에서는 여러 단어를 조합한 변수명에 snake_case(스네이크 케이스)를 사용하는 것이 일반적입니다.
        4. 들여쓰기(Indentation)는 코드의 논리적 구조를 나타내는 중요한 문법 규칙이며, 지켜지지 않을 시 IndentationError가 발생합니다.
        5. 주석(#)은 코드에 대한 설명을 추가하거나 특정 코드를 잠시 비활성화할 때 사용하며, 프로그램 실행에 영향을 주지 않습니다.
'''